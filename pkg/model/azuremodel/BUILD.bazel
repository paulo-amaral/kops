load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "api_loadbalancer.go",
        "context.go",
        "network.go",
        "resourcegroup.go",
        "testing.go",
        "vmscaleset.go",
    ],
    importpath = "k8s.io/kops/pkg/model/azuremodel",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/kops:go_default_library",
        "//pkg/dns:go_default_library",
        "//pkg/model:go_default_library",
        "//pkg/model/defaults:go_default_library",
        "//pkg/model/iam:go_default_library",
        "//pkg/nodeidentity/azure:go_default_library",
        "//upup/pkg/fi:go_default_library",
        "//upup/pkg/fi/cloudup/azure:go_default_library",
        "//upup/pkg/fi/cloudup/azuretasks:go_default_library",
        "//vendor/github.com/Azure/azure-sdk-for-go/services/compute/mgmt/2020-06-01/compute:go_default_library",
        "//vendor/github.com/Azure/go-autorest/autorest/to:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "api_loadbalancer_test.go",
        "context_test.go",
        "network_test.go",
        "resourcegroup_test.go",
        "vmscaleset_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/apis/kops:go_default_library",
        "//pkg/model:go_default_library",
        "//pkg/model/defaults:go_default_library",
        "//upup/pkg/fi:go_default_library",
        "//upup/pkg/fi/cloudup/azuretasks:go_default_library",
        "//upup/pkg/fi/fitasks:go_default_library",
        "//vendor/github.com/Azure/azure-sdk-for-go/services/compute/mgmt/2020-06-01/compute:go_default_library",
        "//vendor/github.com/Azure/go-autorest/autorest/to:go_default_library",
    ],
)

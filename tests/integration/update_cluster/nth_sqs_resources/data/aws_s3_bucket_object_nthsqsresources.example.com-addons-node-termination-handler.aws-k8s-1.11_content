apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: node-termination-handler.aws
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/version: 1.13.0
    k8s-addon: node-termination-handler.aws
    k8s-app: aws-node-termination-handler
  name: aws-node-termination-handler
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: node-termination-handler.aws
    app.kubernetes.io/managed-by: kops
    k8s-addon: node-termination-handler.aws
  name: aws-node-termination-handler
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
- apiGroups:
  - extensions
  resources:
  - daemonsets
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: node-termination-handler.aws
    app.kubernetes.io/managed-by: kops
    k8s-addon: node-termination-handler.aws
  name: aws-node-termination-handler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-node-termination-handler
subjects:
- kind: ServiceAccount
  name: aws-node-termination-handler
  namespace: kube-system

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: node-termination-handler.aws
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/version: 1.13.0
    k8s-addon: node-termination-handler.aws
    k8s-app: aws-node-termination-handler
  name: aws-node-termination-handler
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: aws-node-termination-handler
      app.kubernetes.io/name: aws-node-termination-handler
      kubernetes.io/os: linux
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: aws-node-termination-handler
        app.kubernetes.io/name: aws-node-termination-handler
        k8s-app: aws-node-termination-handler
        kubernetes.io/os: linux
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - arm
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SPOT_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DELETE_LOCAL_DATA
          value: ""
        - name: IGNORE_DAEMON_SETS
          value: ""
        - name: POD_TERMINATION_GRACE_PERIOD
          value: ""
        - name: INSTANCE_METADATA_URL
          value: ""
        - name: NODE_TERMINATION_GRACE_PERIOD
          value: ""
        - name: WEBHOOK_URL
          value: ""
        - name: WEBHOOK_HEADERS
          value: ""
        - name: WEBHOOK_TEMPLATE
          value: ""
        - name: DRY_RUN
          value: "false"
        - name: METADATA_TRIES
          value: "3"
        - name: CORDON_ONLY
          value: "false"
        - name: TAINT_NODE
          value: "false"
        - name: JSON_LOGGING
          value: "false"
        - name: LOG_LEVEL
          value: info
        - name: WEBHOOK_PROXY
          value: ""
        - name: ENABLE_PROMETHEUS_SERVER
          value: "false"
        - name: ENABLE_SPOT_INTERRUPTION_DRAINING
          value: "false"
        - name: ENABLE_SCHEDULED_EVENT_DRAINING
          value: "false"
        - name: ENABLE_REBALANCE_MONITORING
          value: "false"
        - name: ENABLE_SQS_TERMINATION_DRAINING
          value: "true"
        - name: QUEUE_URL
          value: https://sqs.us-test-1.amazonaws.com/123456789012/nthsqsresources-example-com-nth
        - name: PROMETHEUS_SERVER_PORT
          value: "9092"
        - name: AWS_REGION
          value: ""
        - name: AWS_ENDPOINT
          value: ""
        - name: CHECK_ASG_TAG_BEFORE_DRAINING
          value: "true"
        - name: MANAGED_ASG_TAG
          value: aws-node-termination-handler/managed
        - name: WORKERS
          value: "10"
        image: public.ecr.aws/aws-ec2/aws-node-termination-handler:v1.13.0
        imagePullPolicy: IfNotPresent
        name: aws-node-termination-handler
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      dnsPolicy: ""
      hostNetwork: false
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1000
      serviceAccountName: aws-node-termination-handler
      tolerations:
      - operator: Exists
